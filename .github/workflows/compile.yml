name: Compile

on:
  push:
    branches:
      - "master"
    paths:
      - "**/*.c"
      - "**/*.h"
      - "config"
      - "!.clang-format"
      - "!LICENSE"
      - "!.gitignore"
      - "!README.md"
  workflow_dispatch:
  workflow_call:


jobs:
  compile:
    name: Compile ${{ matrix.ngx.nginx_version }} (${{ matrix.ngx.gcc_image }})
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        ngx: [
          { gcc_image: "gcc:6.5.0", nginx_version: "1.11.5" },
          { gcc_image: "gcc:6.5.0", nginx_version: "1.11.6" },
          { gcc_image: "gcc:6.5.0", nginx_version: "1.11.7" },
          { gcc_image: "gcc:6.5.0", nginx_version: "1.11.13" },
          { gcc_image: "gcc:6.5.0", nginx_version: "1.12.2" },
          { gcc_image: "gcc:6.5.0", nginx_version: "1.13.3" },
          { gcc_image: "gcc:6.5.0", nginx_version: "1.13.7" },
          { gcc_image: "gcc:6.5.0", nginx_version: "1.13.8" },
          { gcc_image: "gcc:6.5.0", nginx_version: "1.13.12" },
          { gcc_image: "gcc:6.5.0", nginx_version: "1.14.2" },
          { gcc_image: "gcc:6.5.0", nginx_version: "1.15.12" },
          { gcc_image: "gcc:10.2", nginx_version: "1.17.10" },
          { gcc_image: "gcc:10.2", nginx_version: "1.18.0" },
          { gcc_image: "gcc:10.2", nginx_version: "1.19.3" },
          { gcc_image: "gcc:10.2", nginx_version: "1.19.10" },
          { gcc_image: "gcc:10.2", nginx_version: "1.20.2" },
          { gcc_image: "gcc:10.2", nginx_version: "1.21.1" },
          { gcc_image: "gcc:10.2", nginx_version: "1.21.6" },
          { gcc_image: "gcc:10.2", nginx_version: "1.22.1" },
          { gcc_image: "gcc:10.2", nginx_version: "1.23.3" },
          { gcc_image: "gcc:10.2", nginx_version: "1.23.4" },
          { gcc_image: "gcc:10.2", nginx_version: "1.24.0" },
          { gcc_image: "gcc:10.2", nginx_version: "1.25.0" },
          { gcc_image: "gcc:10.2", nginx_version: "1.25.4" },
          { gcc_image: "gcc:10.2", nginx_version: "1.25.5" },
          { gcc_image: "gcc:10.2", nginx_version: "1.26.0" }
        ]
    container:
      image: ${{ matrix.ngx.gcc_image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: "master"
      - name: Script
        run: |
          export COSMETIC_NGX_DIR=$(pwd)
          wget --no-verbose -O "nginx.tar.gz" "https://nginx.org/download/nginx-${{ matrix.ngx.nginx_version }}.tar.gz"
          tar -xf nginx.tar.gz
          cd nginx-${{ matrix.ngx.nginx_version }}
          chmod +x configure
          ./configure --add-module=$COSMETIC_NGX_DIR --with-stream --with-debug --without-http --with-pcre
          make
        shell: bash
